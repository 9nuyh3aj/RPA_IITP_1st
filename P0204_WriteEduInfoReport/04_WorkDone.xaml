<Activity mc:Ignorable="sap sap2010" x:Class="WorkDone" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="i_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="i_bol_isFail" Type="InArgument(x:Boolean)" />
    <x:Property Name="i_str_processName" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1158,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>Template_IITP.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="WorkDone" sap:VirtualizedContainerService.HintSize="476,614" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_rpaOperator" />
      <Variable x:TypeArguments="x:String" Name="str_fieldWorker" />
      <Variable x:TypeArguments="x:String" Name="str_mailSubject" />
      <Variable x:TypeArguments="x:String" Name="str_mailBody" />
      <Variable x:TypeArguments="x:String" Name="str_rpaOperatorEx" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,526" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="552,3347" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" sap2010:Annotation.AnnotationText="Chrome 종료" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="chrome">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:KillProcess>
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="메일발송" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="510,209" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">str_fieldWorker</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">i_config["FieldWorker"]</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">str_rpaOperator</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">i_config["rpaOperator"]</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">str_rpaOperatorEx</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">i_config["rpaOperatorEx"]</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <If sap2010:Annotation.AnnotationText="조건 : i_bol_isFail" sap:VirtualizedContainerService.HintSize="510,2887" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">!i_bol_isFail</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476,1356" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="str_attachFilePath" />
                  <Variable x:TypeArguments="x:String" Name="str_attachFileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine sap2010:Annotation.AnnotationText="작업성공" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="작업 성공">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </WriteLine>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"작업 성공"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="첨부파일명&#xA;첨부파일경로" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">str_attachFileName</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">string.Format(i_config["Mail_AttachFileName"], DateTime.Today.ToString("yyMMdd"))</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">str_attachFilePath</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">Path.Combine(i_config["RPA_Output"], str_attachFileName)</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <If sap2010:Annotation.AnnotationText="결과파일 압축" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">!File.Exists(str_attachFilePath)</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,171" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uascw:CompressFiles CompressedFileInfo="{x:Null}" CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" sap2010:Annotation.AnnotationText="결과파일 압축" CodePage="Default" CompressionLevel="Normal" DisplayName="Compress/Zip Files" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="258,83" sap2010:WorkflowViewState.IdRef="CompressFiles_2" OverrideExistingFile="True">
                        <uascw:CompressFiles.CompressedFileName>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">str_attachFilePath</CSharpValue>
                          </InArgument>
                        </uascw:CompressFiles.CompressedFileName>
                        <uascw:CompressFiles.ContentToArchive>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">i_config["RPA_Output"]</CSharpValue>
                            </InArgument>
                          </scg:List>
                        </uascw:CompressFiles.ContentToArchive>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uascw:CompressFiles>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9" />
                  </If.Else>
                </If>
                <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="(성공)&#xA;메일제목&#xA;메일본문" Code="str_mailSubject = string.Format(i_config[&quot;Mail_Success_Subject&quot;], DateTime.Now.ToString(&quot;yyMMdd&quot;));&#xA;str_mailBody = i_config[&quot;Mail_Success_Body&quot;];&#xA;//str_attachFilePath = string.Join(&quot;,&quot;, Directory.GetFiles(i_config[&quot;RPA_Output&quot;]));&#xA;&#xA;Console.WriteLine($&quot;메일제목 : {str_mailSubject}&quot;);&#xA;Console.WriteLine($&quot;메일본문 : {str_mailBody}&quot;);&#xA;//Console.WriteLine($&quot;첨부파일 : {str_attachFilePath}&quot;);" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,109" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <OutArgument x:TypeArguments="x:String" x:Key="str_mailSubject">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">str_mailSubject</CSharpReference>
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="str_mailBody">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">str_mailBody</CSharpReference>
                    </OutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">i_config</CSharpValue>
                    </InArgument>
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_SendMail" DisplayName="COM_SendMail" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_7" ProcessName="COM_SendMail">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isAttach">True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailRecv">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">str_fieldWorker</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailSubject">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">str_mailSubject</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBody">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">str_mailBody</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_attachFilePath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">str_attachFilePath</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_assetName">Credential_Hanmaru(RPA2)</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailcc">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">str_rpaOperator</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBcc">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">str_rpaOperatorEx</CSharpValue>
                    </InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_KillProcess" DisplayName="COM_KillProcess" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_4" ProcessName="COM_KillProcess">
                  <ui:InvokeProcess.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ucas:UploadStorageFile FileResource="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="버킷에 업로드" DisplayName="Upload Storage File" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="UploadStorageFile_1" StorageBucketName="RPA2_P0204_교육 수료 결과 작성_결과파일">
                  <ucas:UploadStorageFile.Destination>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">Path.GetFileName(str_attachFilePath)</CSharpValue>
                    </InArgument>
                  </ucas:UploadStorageFile.Destination>
                  <ucas:UploadStorageFile.Path>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">str_attachFilePath</CSharpValue>
                    </InArgument>
                  </ucas:UploadStorageFile.Path>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ucas:UploadStorageFile>
                <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="오늘날짜 제외 나머지 폴더 삭제" Code="try{&#xA;&#x9;string today = DateTime.Today.ToString(&quot;yyMM&quot;);&#xA;&#x9;string parentPath = @&quot;C:\Users\Administrator\Documents\UiPath\P0204_WriteEduInfoReport&quot;;&#xA;&#x9;string[] folderName = new string[]{&quot;Input&quot;, &quot;Output&quot;, &quot;ScreenShot&quot;};&#xA;&#x9;&#xA;&#x9;// Input, Output, ScreenShot&#xA;&#x9;foreach(string folder in folderName){&#xA;&#x9;&#x9;string folderPath = Path.Combine(parentPath, folder); // 폴더경로 지정&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;// 해당 폴더 내 하위폴더(yyMMdd)&#xA;&#x9;&#x9;foreach(string subFolder in Directory.GetDirectories(folderPath)){&#xA;&#x9;&#x9;&#x9;// 하위폴더명&#xA;&#x9;&#x9;&#x9;string subFolderName = Path.GetFileName(subFolder);&#xA;&#x9;&#x9;&#x9;// 하위폴더명에 오늘날짜 yyMM 이 포함되어있지 않으면 폴더 삭제&#xA;&#x9;&#x9;&#x9;if(!subFolderName.Contains(today)){&#xA;&#x9;&#x9;&#x9;&#x9;Directory.Delete(subFolder, true);&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine($&quot;Deleted Folder : {subFolder}&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}catch(Exception e){&#xA;&#x9;Console.WriteLine(e.Message);&#xA;&#x9;throw;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="프로세스 종료">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </WriteLine>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">"프로세스 종료"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="476,1318" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="str_screenFileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine sap2010:Annotation.AnnotationText="작업실패" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="작업 실패">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </WriteLine>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">"작업 실패"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="(실패)&#xA;메일제목&#xA;메일본문&#xA;캡쳐압축파일명" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">str_mailSubject</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">string.Format(i_config["P0204_03_Mail_Fail_Subject"], DateTime.Now.ToString("yyMMdd"))</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">str_mailBody</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">i_config["P0204_03_Mail_Fail_Body"]</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">str_screenFileName</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">$"에러캡쳐_{i_str_processName}.zip"</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <uascw:CompressFiles CompressedFileInfo="{x:Null}" CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" sap2010:Annotation.AnnotationText="캡쳐파일압축" CodePage="Default" CompressionLevel="Normal" DisplayName="Compress/Zip Files" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="CompressFiles_1" OverrideExistingFile="True">
                  <uascw:CompressFiles.CompressedFileName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">Path.Combine(i_config["RPA_Output"], str_screenFileName)</CSharpValue>
                    </InArgument>
                  </uascw:CompressFiles.CompressedFileName>
                  <uascw:CompressFiles.ContentToArchive>
                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">i_config["RPA_ScreenShot"]</CSharpValue>
                      </InArgument>
                    </scg:List>
                  </uascw:CompressFiles.ContentToArchive>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uascw:CompressFiles>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_SendSMS" DisplayName="COM_SendSMS" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_3" ProcessName="COM_SendSMS">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_msgBody">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">i_config["Mail_Fail_Body"]</CSharpValue>
                    </InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_KillProcess" DisplayName="COM_KillProcess" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_5" ProcessName="COM_KillProcess">
                  <ui:InvokeProcess.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_SendMail" DisplayName="COM_SendMail" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_2" ProcessName="COM_SendMail">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isAttach">True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailRecv">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">str_rpaOperator</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailSubject">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">str_mailSubject</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBody">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">str_mailBody</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_attachFilePath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">Path.Combine(i_config["RPA_Output"], str_screenFileName)</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_assetName">Credential_Hanmaru(RPA2)</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailcc" />
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBcc">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">str_rpaOperatorEx</CSharpValue>
                    </InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_KillProcess" DisplayName="COM_KillProcess" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_6" ProcessName="COM_KillProcess">
                  <ui:InvokeProcess.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="프로세스 에러로 종료">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </WriteLine>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">"프로세스 에러로 종료"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Throw sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="Throw_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InArgument x:TypeArguments="s:Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">new SystemException("프로세스 에러로 종료")</CSharpValue>
                  </InArgument>
                </Throw>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,363" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,294" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Assign sap2010:Annotation.AnnotationText="i_bol_isFail = false" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">
              <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">i_bol_isFail</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>