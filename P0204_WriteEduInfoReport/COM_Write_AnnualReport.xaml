<Activity mc:Ignorable="sap sap2010" x:Class="COM_Write_YearlyReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="i_str_folderPath" Type="InArgument(x:String)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="i_dt_eduData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="i_str_khrEduDate" Type="InArgument(x:String)" />
    <x:Property Name="i_bol_isKhrEdu" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:COM_Write_YearlyReport.i_dt_eduData>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:COM_Write_YearlyReport.i_dt_eduData>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>698,2822</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="COM_Write_YearlyReport" sap:VirtualizedContainerService.HintSize="708,2757" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bol_existTodayYear" />
      <Variable x:TypeArguments="x:String" Name="str_bucketName" />
      <Variable x:TypeArguments="x:String" Name="str_templateFileName" />
      <Variable x:TypeArguments="x:String" Name="str_yearlyReportFileName" />
      <Variable x:TypeArguments="x:String" Name="str_yealryReportFilePath" />
      <Variable x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" Name="reportFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="666,2669" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="628,2419" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="586,209" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">str_bucketName</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">IITP_교육수료_전직원학습목표제이수현황</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">str_templateFileName</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">"{0}_학습목표제 이수현황({1}).xlsx"</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">str_yearlyReportFileName</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">string.Format(str_templateFileName, DateTime.Today.ToString("yyyy"), "전직원")</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">str_yealryReportFilePath</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">Path.Combine(i_str_folderPath, str_yearlyReportFileName)</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <Sequence DisplayName="Bucket To Local" sap:VirtualizedContainerService.HintSize="586,81" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ucas:ListStorageFiles Filter="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="버킷 파일목록 추출" Directory="\" DisplayName="List Storage Files" sap:VirtualizedContainerService.HintSize="388,164" sap2010:WorkflowViewState.IdRef="ListStorageFiles_1" Recursive="True">
              <ucas:ListStorageFiles.Result>
                <OutArgument x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)">
                  <CSharpReference x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">reportFiles</CSharpReference>
                </OutArgument>
              </ucas:ListStorageFiles.Result>
              <ucas:ListStorageFiles.StorageBucketName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">str_bucketName</CSharpValue>
                </InArgument>
              </ucas:ListStorageFiles.StorageBucketName>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ucas:ListStorageFiles>
            <ui:ForEach x:TypeArguments="ucas:StorageFileInfo" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="스토리지버킷에서&#xA;보고서파일목록을 검색&#xA;올해년도의 보고서 파일년도가 있는지 확인" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,425" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ucas:StorageFileInfo">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ucas:StorageFileInfo" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="300,182" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If sap2010:Annotation.AnnotationText="파일이 올해년도와 같으면 true &amp; break" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">currentItem.FileFullPath.Contains(DateTime.Today.ToString("yyyy"))</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">bol_existTodayYear</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">bol_existTodayYear</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">reportFiles</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If sap2010:Annotation.AnnotationText="true = 올해년도 파일을 복사&#xA;false = 템플릿파일명의 파일을 복사" sap:VirtualizedContainerService.HintSize="388,109" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">bol_existTodayYear</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ucas:DownloadStorageFile TimeoutMS="{x:Null}" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_2">
                    <ucas:DownloadStorageFile.Destination>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">Path.Combine(i_str_folderPath, str_yearlyReportFileName)</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Destination>
                    <ucas:DownloadStorageFile.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">str_yearlyReportFileName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Path>
                    <ucas:DownloadStorageFile.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">str_bucketName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.StorageBucketName>
                  </ucas:DownloadStorageFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ucas:DownloadStorageFile TimeoutMS="{x:Null}" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_3">
                    <ucas:DownloadStorageFile.Destination>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">Path.Combine(i_str_folderPath, str_yearlyReportFileName)</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Destination>
                    <ucas:DownloadStorageFile.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">str_templateFileName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Path>
                    <ucas:DownloadStorageFile.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">str_bucketName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.StorageBucketName>
                  </ucas:DownloadStorageFile>
                </Sequence>
              </If.Else>
            </If>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteLine_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">$"Download To Local : {Path.Combine(i_str_folderPath, str_yearlyReportFileName)}"</CSharpValue>
              </InArgument>
            </WriteLine>
          </Sequence>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="데이터를 전직원교육현황 엑셀에 작성" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="586,1840" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="552,1722" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="전직원 학습목표제 이수현황" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="510,1634" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="476,1334" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dt_yearly" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="전직원학습목표제 이수현황 파일 데이터테이블로 읽기" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A3" SheetName="양식">
                            <ui:ExcelReadRange.DataTable>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">dt_yearly</CSharpReference>
                              </OutArgument>
                            </ui:ExcelReadRange.DataTable>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelReadRange>
                          <If sap2010:Annotation.AnnotationText="true = 법정교육 이수학점, 이수율 계산&#xA;false = 수시, 외부교육 계산" sap:VirtualizedContainerService.HintSize="434,588" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">i_bol_isKhrEdu</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,284" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="이수학점, 이수율 계산" Code="/*&#xD;&#xA;직원번호 | 직원번호&#xD;&#xA;성명 | 성명&#xD;&#xA;소속 단 | 소속 단&#xD;&#xA;소속 팀 | 소속 팀&#xD;&#xA;직위 | 직위&#xD;&#xA;구분 | 법정&#xD;&#xA;과정명 | 법정교육&#xD;&#xA;교육기간 | &quot;&quot;&#xD;&#xA;이수학점 | 16&#xD;&#xA;이수여부 | &#xD;&#xA;필요학점 | 16&#xD;&#xA;비고 | &#xD;&#xA;이수율 |&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;// 이수기준학점 = 16(15점이나 CS 교육도 추가되어 16점, *담당자 요청사항)&#xD;&#xA;int int_maxCredit = 16;&#xD;&#xA;&#xD;&#xA;///////////////////////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// 4대폭력예방교육&#xD;&#xA;var columns_1 = dt_khr.Columns.Cast&lt;DataColumn&gt;()&#xD;&#xA;&#x9;.Where(col =&gt; col.ColumnName.Contains(&quot;4대폭력예방교육&quot;))&#xD;&#xA;&#x9;.ToList();&#xD;&#xA;&#xD;&#xA;// 부패방지교육&#xD;&#xA;var columns_2 = dt_khr.Columns.Cast&lt;DataColumn&gt;()&#xD;&#xA;&#x9;.Where(col =&gt; col.ColumnName.Contains(&quot;부패방지교육&quot;))&#xD;&#xA;&#x9;.ToList();&#xD;&#xA;&#xD;&#xA;// 그 외 교육&#xD;&#xA;var otherColumns = dt_khr.Columns.Cast&lt;DataColumn&gt;()&#xD;&#xA;&#x9;.Where(col =&gt; !col.ColumnName.Contains(&quot;4대폭력예방교육&quot;) &amp;&amp; !col.ColumnName.Contains(&quot;부패방지교육&quot;))&#xD;&#xA;&#x9;.ToList();&#xD;&#xA;///////////////////////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;/// &#xD;&#xA;// 데이터테이블 입력&#xD;&#xA;foreach(DataRow row in dt_khr.Rows){&#xD;&#xA;&#x9;int int_credit = 0; // 학점&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// 4대폭력&#xD;&#xA;&#x9;bool bol_columns_1 = columns_1.All(col =&gt; row[col].ToString() == &quot;O&quot;);&#x9;&#xD;&#xA;&#x9;if(bol_columns_1){&#xD;&#xA;&#x9;&#x9;int_credit++;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;// 부패방지교육&#xD;&#xA;&#x9;bool bol_columns_2 = columns_2.All(col =&gt; row[col].ToString() == &quot;O&quot;);&#xD;&#xA;&#x9;if(bol_columns_2){&#xD;&#xA;&#x9;&#x9;int_credit++;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;// 그 외 학점 계산&#xD;&#xA;&#x9;foreach(var col in otherColumns){&#xD;&#xA;&#x9;&#x9;if(row[col].ToString() == &quot;O&quot;){&#xD;&#xA;&#x9;&#x9;&#x9;int_credit++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// 이미 입력된 건이면 기존 row를 찾아 점수만 다시 입력&#xD;&#xA;&#x9;bool bol_overWriteData = false;&#xD;&#xA;&#x9;DataRow alreadyRow = dt_yearly.NewRow();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;foreach(DataRow dr in dt_yearly.Rows){&#xD;&#xA;&#x9;&#x9;if(dr[&quot;직원번호&quot;] == row[&quot;직원번호&quot;].ToString() &amp;&amp; dr[&quot;구분&quot;] == &quot;법정&quot;){&#xD;&#xA;&#x9;&#x9;&#x9;bol_overWriteData = true;&#xD;&#xA;&#x9;&#x9;&#x9;alreadyRow = dr;&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// 이미 입력된 건이면 기존 row 에 입력&#xD;&#xA;&#x9;if(bol_overWriteData){&#xD;&#xA;&#x9;&#x9;// 나머지 입력&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;직원번호&quot;] = row[&quot;직원번호&quot;].ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;성명&quot;] = row[&quot;성명&quot;].ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;소속 단&quot;] = row[&quot;소속 단&quot;].ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;소속 팀&quot;] = row[&quot;소속 팀&quot;].ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;직위&quot;] = row[&quot;직위&quot;].ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;구분&quot;] = &quot;법정&quot;;&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;과정명&quot;] = &quot;법정교육&quot;;&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;교육기간&quot;] = i_str_khrEduDate; // yyyy-MM-dd~yyyy-MM-dd&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;이수학점&quot;] = int_credit.ToString();&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;필요학점&quot;] = int_maxCredit.ToString();&#xD;&#xA;&#x9;&#x9;// 이수율&#xD;&#xA;&#x9;&#x9;double perCredit = ((double)int_credit/int_maxCredit) *100;&#xD;&#xA;&#x9;&#x9;perCredit = Math.Round(perCredit, 2);&#xD;&#xA;&#x9;&#x9;alreadyRow[&quot;이수율&quot;] = $&quot;{perCredit}%&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;// 이수여부&#xD;&#xA;&#x9;&#x9;if(int_credit &gt;= int_maxCredit){&#xD;&#xA;&#x9;&#x9;&#x9;alreadyRow[&quot;이수여부&quot;] = &quot;O&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;// 결과출력&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine($&quot;{alreadyRow[&quot;성명&quot;].ToString()}({alreadyRow[&quot;직원번호&quot;].ToString()}) 이수 결과 : 이수({int_credit})&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else{&#xD;&#xA;&#x9;&#x9;&#x9;alreadyRow[&quot;이수여부&quot;] = &quot;X&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;// 결과출력&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine($&quot;{alreadyRow[&quot;성명&quot;].ToString()}({alreadyRow[&quot;직원번호&quot;].ToString()}) 이수 결과 : 미이수({int_credit})&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;// 그렇지 않으면 신규 row 를 추가 후 입력&#xD;&#xA;&#x9;else{&#xD;&#xA;&#x9;&#x9;// 나머지 입력&#xD;&#xA;&#x9;&#x9;DataRow newRow = dt_yearly.NewRow();&#xD;&#xA;&#x9;&#x9;dt_yearly.Rows.Add(newRow);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;newRow[&quot;직원번호&quot;] = row[&quot;직원번호&quot;].ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;성명&quot;] = row[&quot;성명&quot;].ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;소속 단&quot;] = row[&quot;소속 단&quot;].ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;소속 팀&quot;] = row[&quot;소속 팀&quot;].ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;직위&quot;] = row[&quot;직위&quot;].ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;구분&quot;] = &quot;법정&quot;;&#xD;&#xA;&#x9;&#x9;newRow[&quot;과정명&quot;] = &quot;법정교육&quot;;&#xD;&#xA;&#x9;&#x9;newRow[&quot;교육기간&quot;] = i_str_khrEduDate; // yyyy-MM-dd~yyyy-MM-dd&#xD;&#xA;&#x9;&#x9;newRow[&quot;이수학점&quot;] = int_credit.ToString();&#xD;&#xA;&#x9;&#x9;newRow[&quot;필요학점&quot;] = int_maxCredit.ToString();&#xD;&#xA;&#x9;&#x9;// 이수율&#xD;&#xA;&#x9;&#x9;double perCredit = ((double)int_credit/int_maxCredit) *100;&#xD;&#xA;&#x9;&#x9;perCredit = Math.Round(perCredit, 2);&#xD;&#xA;&#x9;&#x9;newRow[&quot;이수율&quot;] = $&quot;{perCredit}%&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;// 이수여부&#xD;&#xA;&#x9;&#x9;if(int_credit &gt;= int_maxCredit){&#xD;&#xA;&#x9;&#x9;&#x9;newRow[&quot;이수여부&quot;] = &quot;O&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;// 결과출력&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine($&quot;{newRow[&quot;성명&quot;].ToString()}({newRow[&quot;직원번호&quot;].ToString()}) 이수 결과 : 이수({int_credit})&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else{&#xD;&#xA;&#x9;&#x9;&#x9;newRow[&quot;이수여부&quot;] = &quot;X&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;// 결과출력&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine($&quot;{newRow[&quot;성명&quot;].ToString()}({newRow[&quot;직원번호&quot;].ToString()}) 이수 결과 : 미이수({int_credit})&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="334,196" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_khr">
                                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">i_dt_eduData</CSharpValue>
                                    </InArgument>
                                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt_yearly">
                                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">dt_yearly</CSharpReference>
                                    </InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="i_str_khrEduDate">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">i_str_khrEduDate</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeCode.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeCode>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <ueab:ForEachSheetX DisplayName="For Each Excel Sheet" sap:VirtualizedContainerService.HintSize="434,484" sap2010:WorkflowViewState.IdRef="ForEachSheetX_2">
                            <ueab:ForEachSheetX.Body>
                              <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                <ActivityAction.Argument1>
                                  <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                </ActivityAction.Argument1>
                                <ActivityAction.Argument2>
                                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                </ActivityAction.Argument2>
                                <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="300,320" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:WriteRangeX sap2010:Annotation.AnnotationText="사이버교육 데이터 전직원 학습목표제 이수현황 엑셀에 작성" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="258,109" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False">
                                    <ueab:WriteRangeX.Destination>
                                      <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                        <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">CurrentSheet.Range["A4"]</CSharpValue>
                                      </InArgument>
                                    </ueab:WriteRangeX.Destination>
                                    <ueab:WriteRangeX.Source>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">dt_yearly</CSharpValue>
                                      </InArgument>
                                    </ueab:WriteRangeX.Source>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:WriteRangeX>
                                  <ueab:AutoFitX sap2010:Annotation.AnnotationText="행, 열 너비 Autofit" Columns="True" DisplayName="Autofit Range" sap:VirtualizedContainerService.HintSize="258,83" sap2010:WorkflowViewState.IdRef="AutoFitX_1" Rows="True">
                                    <ueab:AutoFitX.Range>
                                      <InArgument x:TypeArguments="ue:IReadRangeRef">
                                        <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">CurrentSheet</CSharpValue>
                                      </InArgument>
                                    </ueab:AutoFitX.Range>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:AutoFitX>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ForEachSheetX.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ForEachSheetX.Workbook>
                              <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Excel</CSharpValue>
                              </InArgument>
                            </ueab:ForEachSheetX.Workbook>
                          </ueab:ForEachSheetX>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard.WorkbookPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">str_yealryReportFilePath</CSharpValue>
                      </InArgument>
                    </ueab:ExcelApplicationCard.WorkbookPath>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
          <Sequence DisplayName="Local To Bucket" sap:VirtualizedContainerService.HintSize="586,81" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ucas:UploadStorageFile FileResource="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="경로 : 업로드할 파일 경로&#xA;대상 : 업로드시 파일명&#xA;버킷 이름 : 버킷이름" DisplayName="Upload Storage File" sap:VirtualizedContainerService.HintSize="388,109" sap2010:WorkflowViewState.IdRef="UploadStorageFile_1">
              <ucas:UploadStorageFile.Destination>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">Path.GetFileName(str_yealryReportFilePath)</CSharpValue>
                </InArgument>
              </ucas:UploadStorageFile.Destination>
              <ucas:UploadStorageFile.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">str_yealryReportFilePath</CSharpValue>
                </InArgument>
              </ucas:UploadStorageFile.Path>
              <ucas:UploadStorageFile.StorageBucketName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">str_bucketName</CSharpValue>
                </InArgument>
              </ucas:UploadStorageFile.StorageBucketName>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ucas:UploadStorageFile>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteLine_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">$"Upload to Bucket : {str_yealryReportFilePath}"</CSharpValue>
              </InArgument>
            </WriteLine>
            <ui:DeleteFileX sap2010:Annotation.AnnotationText="(버킷에 업로드 후)전직원학습목표제 이수현황 파일 삭제" DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="DeleteFileX_1">
              <ui:DeleteFileX.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">str_yealryReportFilePath</CSharpValue>
                </InArgument>
              </ui:DeleteFileX.Path>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:DeleteFileX>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteLine_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">$"Deleted : {str_yealryReportFilePath}"</CSharpValue>
              </InArgument>
            </WriteLine>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="632,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,328" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine sap2010:Annotation.AnnotationText="에러메세지" DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="WriteLine_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">$"Error Msg : {exception.Message}"</CSharpValue>
                </InArgument>
              </WriteLine>
              <ui:LogMessage DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">$"Error Msg : {exception.Message}"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="632,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">exception.Message</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>