<Activity mc:Ignorable="sap sap2010" x:Class="시퀀스" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="i_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="i_str_khrEduDate" Type="InArgument(x:String)" />
    <x:Property Name="i_dt_hrData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="i_dt_empPayPeak" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1158,4361</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="시퀀스" sap:VirtualizedContainerService.HintSize="967,4296" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="bol_isFail" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="int_retryCnt" />
      <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobInfo" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_annual" />
      <Variable x:TypeArguments="x:Int32" Name="int_mergeRowIndex" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="조건 : bol_isFail" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="925,4208" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="891,4041" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="849,3953" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="811,3703" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="769,25" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_1">
                  <ui:GetCurrentJobInfo.Result>
                    <OutArgument x:TypeArguments="ui:CurrentJobInfo">
                      <CSharpReference x:TypeArguments="ui:CurrentJobInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">jobInfo</CSharpReference>
                    </OutArgument>
                  </ui:GetCurrentJobInfo.Result>
                </ui:GetCurrentJobInfo>
                <ui:LogMessage DisplayName="Start Log Message" sap:VirtualizedContainerService.HintSize="769,52" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">$"Start {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_KillProcess" DisplayName="COM_KillProcess" sap:VirtualizedContainerService.HintSize="769,197" sap2010:WorkflowViewState.IdRef="InvokeProcess_3" ProcessName="COM_KillProcess">
                  <ui:InvokeProcess.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="초기값 설정" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="769,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">bol_isFail</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">int_retryCnt</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">int_retryCnt+1</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="해당 워크플로우 cpl 파일이 있으면 &#xA;이미 처리한 건으로, 건너뛰기" DisplayName="COM_Check_Or_Create_CplFile" sap:VirtualizedContainerService.HintSize="769,124" sap2010:WorkflowViewState.IdRef="InvokeProcess_1" ProcessName="COM_Check_Or_Create_CplFile">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplPath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">i_config["RPA_cpl"]</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplFileName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">$"{jobInfo.WorkflowName}.cpl"</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_workFlowName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">jobInfo.WorkflowName</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isCheck">True</InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="769,2583" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="735,2496" sap2010:WorkflowViewState.IdRef="Sequence_51">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" sap2010:Annotation.AnnotationText="직원번호 순으로 정렬" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="693,111" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Ascending" SortOrder="Ascending">
                          <ui:SortDataTable.ColumnIndex>
                            <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                              <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                            </InArgument>
                          </ui:SortDataTable.ColumnIndex>
                          <ui:SortDataTable.DataTable>
                            <InArgument x:TypeArguments="sd:DataTable">
                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">i_dt_hrData</CSharpValue>
                            </InArgument>
                          </ui:SortDataTable.DataTable>
                          <ui:SortDataTable.OutputDataTable>
                            <OutArgument x:TypeArguments="sd:DataTable">
                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">i_dt_hrData</CSharpReference>
                            </OutArgument>
                          </ui:SortDataTable.OutputDataTable>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SortDataTable>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="인사정보일괄조회 데이터테이블을 반복하여 작업" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="693,2257" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="659,2040" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="str_deptName" />
                                  <Variable x:TypeArguments="x:String" Name="str_teamName" />
                                  <Variable x:TypeArguments="x:String" Name="str_deptFilePath" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign sap2010:Annotation.AnnotationText="소속부서부&#xA;소속부서팀" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="617,94" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">str_deptName</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">CurrentRow["소속부서부"].ToString()</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">str_teamName</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">CurrentRow["소속부서팀"].ToString()</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:MultipleAssign>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="617,52" sap2010:WorkflowViewState.IdRef="WriteLine_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">$"{CurrentRow["직원번호"]}({CurrentRow["성명"]}) -&gt; {str_deptName}/{str_teamName}"</CSharpValue>
                                  </InArgument>
                                </WriteLine>
                                <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Data -&gt; Output 복사" Code="try{&#xA;&#x9;string dataPath = i_config[&quot;RPA_Data&quot;];&#xA;&#x9;string outputPath = i_config[&quot;RPA_Output&quot;];&#xA;&#x9;string templateFileName = i_config[&quot;AnnualReportFileName&quot;];&#xA;&#x9;&#xA;&#x9;string todayYear = DateTime.Today.ToString(&quot;yyyy&quot;);&#xA;&#x9;string dep = str_dept;&#xA;&#x9;string today = DateTime.Today.ToString(&quot;yyMMdd&quot;);&#xA;&#x9;&#xA;&#x9;string deptFileName = string.Format(templateFileName, todayYear, dep, today);&#xA;&#x9;&#xA;&#x9;string templateFilePath = System.IO.Path.Combine(dataPath, templateFileName);&#xA;&#x9;string deptFilePath = System.IO.Path.Combine(outputPath, deptFileName);&#xA;&#x9;&#xA;&#x9;if(!System.IO.File.Exists(deptFilePath)){&#xA;&#x9;&#x9;System.IO.File.Copy(templateFilePath, deptFilePath);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;str_deptFilePath = deptFilePath;&#xA;}&#xA;&#xA;catch(Exception e){&#xA;&#x9;Console.WriteLine(e.Message);&#xA;&#x9;throw;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="617,83" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="str_dept">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">str_deptName</CSharpValue>
                                    </InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="str_deptFilePath">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">str_deptFilePath</CSharpReference>
                                    </OutArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">i_config</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeCode.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeCode>
                                <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="617,1603" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_5" ResizeWindow="Maximize">
                                  <ueab:ExcelApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="583,1334" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap2010:Annotation.AnnotationText="소속부서부 파일 내 소속부서팀 시트 없으면 생성" sap:VirtualizedContainerService.HintSize="541,112" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:List(x:String)" Name="strArr_teamSheets" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelGetWorkbookSheets sap2010:Annotation.AnnotationText="모든 시트명 추출" DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="410,56" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1">
                                            <ui:ExcelGetWorkbookSheets.Sheets>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">
                                                <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">strArr_teamSheets</CSharpReference>
                                              </OutArgument>
                                            </ui:ExcelGetWorkbookSheets.Sheets>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelGetWorkbookSheets>
                                          <If sap2010:Annotation.AnnotationText="시트가 없다면&#xA;시트를 복사하고&#xA;제목과 작성 기준일 입력" sap:VirtualizedContainerService.HintSize="410,786" sap2010:WorkflowViewState.IdRef="If_3">
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">!strArr_teamSheets.Contains(str_teamName)</CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="376,547" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:DuplicateSheetX sap2010:Annotation.AnnotationText="양식 -&gt; 팀명 시트로 복사" DisplayName="Duplicate Sheet" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="DuplicateSheetX_1">
                                                  <ueab:DuplicateSheetX.NewSheetName>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">str_teamName</CSharpValue>
                                                    </InArgument>
                                                  </ueab:DuplicateSheetX.NewSheetName>
                                                  <ueab:DuplicateSheetX.SheetToDuplicate>
                                                    <InArgument x:TypeArguments="ue:ISheetRef">
                                                      <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">Excel.Sheet["양식"]</CSharpValue>
                                                    </InArgument>
                                                  </ueab:DuplicateSheetX.SheetToDuplicate>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ueab:DuplicateSheetX>
                                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_7">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">$"{str_deptName} 파일 내 {str_teamName} 시트 생성"</CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <ueab:FindReplaceValueX FoundAt="{x:Null}" sap2010:Annotation.AnnotationText="제목 변경" DisplayName="Find/Replace Value" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_1" LookIn="Values" Operation="Replace">
                                                  <ueab:FindReplaceValueX.ReplaceWith>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">string.Format("{0} IITP 학습목표제 이수현황", DateTime.Today.ToString("yyyy"))</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.ReplaceWith>
                                                  <ueab:FindReplaceValueX.ValueToFind>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">"{0} IITP 학습목표제 이수현황"</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.ValueToFind>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ueab:FindReplaceValueX.WhereToSearch>
                                                    <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                      <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">Excel.Sheet[str_teamName]</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.WhereToSearch>
                                                </ueab:FindReplaceValueX>
                                                <ueab:FindReplaceValueX FoundAt="{x:Null}" sap2010:Annotation.AnnotationText="작성 기준일 변경" DisplayName="Find/Replace Value" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_2" LookIn="Values" Operation="Replace">
                                                  <ueab:FindReplaceValueX.ReplaceWith>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">string.Format("기준일 : {0}", DateTime.Today.ToString("yyyy.MM.dd."))</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.ReplaceWith>
                                                  <ueab:FindReplaceValueX.ValueToFind>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">"기준일 : {0}"</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.ValueToFind>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ueab:FindReplaceValueX.WhereToSearch>
                                                    <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                      <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">Excel.Sheet[str_teamName]</CSharpValue>
                                                    </InArgument>
                                                  </ueab:FindReplaceValueX.WhereToSearch>
                                                </ueab:FindReplaceValueX>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                        <Sequence sap2010:Annotation.AnnotationText="이미 작성되어있으면 생략" sap:VirtualizedContainerService.HintSize="541,112" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="str_empIdAddr" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ueab:FindReplaceValueX ReplaceWith="{x:Null}" sap2010:Annotation.AnnotationText="직원번호를 확인하여 이미 입력되어있는지 확인" DisplayName="Find/Replace Value" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_3" LookIn="Values" Operation="Find">
                                            <ueab:FindReplaceValueX.FoundAt>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">str_empIdAddr</CSharpReference>
                                              </OutArgument>
                                            </ueab:FindReplaceValueX.FoundAt>
                                            <ueab:FindReplaceValueX.ValueToFind>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">CurrentRow["직원번호"]</CSharpValue>
                                              </InArgument>
                                            </ueab:FindReplaceValueX.ValueToFind>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:FindReplaceValueX.WhereToSearch>
                                              <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">Excel.Sheet[str_teamName]</CSharpValue>
                                              </InArgument>
                                            </ueab:FindReplaceValueX.WhereToSearch>
                                          </ueab:FindReplaceValueX>
                                          <If sap2010:Annotation.AnnotationText="이미 입력되어있으면 생략" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_4">
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">!string.IsNullOrEmpty(str_empIdAddr)</CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                        <Sequence sap2010:Annotation.AnnotationText="경비, 미화, 시설, 운전은 제외" sap:VirtualizedContainerService.HintSize="541,112" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="bol_notWrite" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="직원 구분이&#xA;경비, 미화, 시설, 운전인지 확인" Code="string empType = CurrentRow[&quot;직원세구분&quot;].ToString();&#xA;if(empType.Contains(&quot;경비&quot;)){&#xA;&#x9;bol_notWrite = true;&#xA;}&#xA;else if(empType.Contains(&quot;미화&quot;)){&#x9;&#xA;&#x9;bol_notWrite = true;&#xA;}&#xA;&#xA;else if(empType.Contains(&quot;시설&quot;)){&#x9;&#xA;&#x9;bol_notWrite = true;&#xA;}&#xA;&#xA;else if(empType.Contains(&quot;운전&quot;)){&#x9;&#xA;&#x9;bol_notWrite = true;&#xA;}&#xA;else{&#xA;&#x9;bol_notWrite = false;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="388,109" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                                            <ui:InvokeCode.Arguments>
                                              <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">
                                                <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">CurrentRow</CSharpValue>
                                              </InArgument>
                                              <OutArgument x:TypeArguments="x:Boolean" x:Key="bol_notWrite">
                                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">bol_notWrite</CSharpReference>
                                              </OutArgument>
                                            </ui:InvokeCode.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeCode>
                                          <If sap2010:Annotation.AnnotationText="해당된다면 건너뛰기" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_5">
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">bol_notWrite</CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                        <Sequence sap2010:Annotation.AnnotationText="비어있는 셀 찾기" sap:VirtualizedContainerService.HintSize="541,112" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="str_empIdCell" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">int_mergeRowIndex</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">7</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="비어있는 셀 찾기" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="510,521" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                                            <ui:InterruptibleDoWhile.Body>
                                              <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="476,354" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:ReadCellValueX DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                                                  <ueab:ReadCellValueX.Cell>
                                                    <InArgument x:TypeArguments="ue:IReadCellRef">
                                                      <CSharpValue x:TypeArguments="ue:IReadCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">Excel.Sheet[str_teamName].Cell[$"B{int_mergeRowIndex}"]</CSharpValue>
                                                    </InArgument>
                                                  </ueab:ReadCellValueX.Cell>
                                                  <ueab:ReadCellValueX.SaveTo>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">str_empIdCell</CSharpReference>
                                                    </OutArgument>
                                                  </ueab:ReadCellValueX.SaveTo>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ueab:ReadCellValueX>
                                                <If sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_6">
                                                  <If.Condition>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">string.IsNullOrEmpty(str_empIdCell)</CSharpValue>
                                                    </InArgument>
                                                  </If.Condition>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Break sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">
                                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">int_mergeRowIndex</CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">
                                                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">int_mergeRowIndex+5</CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                              </Sequence>
                                            </ui:InterruptibleDoWhile.Body>
                                            <ui:InterruptibleDoWhile.Condition>
                                              <CSharpValue x:TypeArguments="x:Boolean" DisplayName="C sharp value" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">!string.IsNullOrEmpty(str_empIdCell)</CSharpValue>
                                            </ui:InterruptibleDoWhile.Condition>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InterruptibleDoWhile>
                                        </Sequence>
                                        <Sequence sap2010:Annotation.AnnotationText="엑셀에 값 쓰기" sap:VirtualizedContainerService.HintSize="541,638" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="str_notice" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="비고 값 쓰기" Code="try{&#xA;&#x9;// 비고입력&#xA;&#x9;string notice = &quot;&quot;;&#xA;&#x9;// 1. 근무상태코드 = 휴직중&#xA;&#x9;if((string)CurrentRow[&quot;근무상태코드&quot;] == &quot;휴직중&quot;){&#xA;&#x9;&#x9;notice += CurrentRow[&quot;근무상태코드&quot;];&#xA;&#x9;}&#xA;&#x9;// 2. 공무직&#xA;&#x9;if(CurrentRow[&quot;직원구분&quot;].ToString().Contains(&quot;공무직&quot;)){&#xA;&#x9;&#x9;if(!string.IsNullOrEmpty(notice)){&#xA;&#x9;&#x9;&#x9;notice += &quot;, &quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;notice += CurrentRow[&quot;직원구분&quot;].ToString();&#xA;&#x9;}&#xA;&#x9;// 3. 인턴&#xA;&#x9;if(CurrentRow[&quot;직원세구분&quot;].ToString().Contains(&quot;인턴&quot;)){&#xA;&#x9;&#x9;if(!string.IsNullOrEmpty(notice)){&#xA;&#x9;&#x9;&#x9;notice += &quot;, &quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;notice += CurrentRow[&quot;직원세구분&quot;].ToString();&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;// 4. 임금피크제&#xA;&#x9;bool payPeakExists = i_dt_empPayPeak.Select($&quot;사번 = '{CurrentRow[&quot;직원번호&quot;]}'&quot;).Length &gt; 0;&#xA;&#x9;if(payPeakExists){&#xA;&#x9;&#x9;if(!string.IsNullOrEmpty(notice)){&#xA;&#x9;&#x9;&#x9;notice += &quot;, &quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;notice += &quot;임금피크제&quot;;&#xA;&#x9;}&#xA;&#x9;// Output&#xA;&#x9;str_notice = notice;&#xA;}&#xA;catch(Exception e){&#xA;&#x9;Console.WriteLine(e.Message);&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="479,83" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
                                            <ui:InvokeCode.Arguments>
                                              <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">
                                                <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">CurrentRow</CSharpValue>
                                              </InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="str_notice">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">str_notice</CSharpReference>
                                              </OutArgument>
                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_empPayPeak">
                                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">i_dt_empPayPeak</CSharpValue>
                                              </InArgument>
                                            </ui:InvokeCode.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeCode>
                                          <ui:MultipleAssign sap2010:Annotation.AnnotationText="B : 직원번호&#xA;C : 성명&#xA;D : 소속부서부&#xA;E : 소속부서팀&#xA;F : 직위&#xA;V : 비고" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,373" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">Excel.Sheet[str_teamName].Cell[$"B{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">CurrentRow["직원번호"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">Excel.Sheet[str_teamName].Cell[$"C{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">CurrentRow["성명"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">Excel.Sheet[str_teamName].Cell[$"D{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">CurrentRow["소속부서부"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">Excel.Sheet[str_teamName].Cell[$"E{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">CurrentRow["소속부서팀"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">Excel.Sheet[str_teamName].Cell[$"F{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">CurrentRow["직위"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">Excel.Sheet[str_teamName].Cell[$"V{int_mergeRowIndex}"]</CSharpReference>
                                                    </OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="ue:ExcelValue">
                                                      <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">str_notice</CSharpValue>
                                                    </InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:MultipleAssign>
                                        </Sequence>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelApplicationCard.Body>
                                  <ueab:ExcelApplicationCard.WorkbookPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">str_deptFilePath</CSharpValue>
                                    </InArgument>
                                  </ueab:ExcelApplicationCard.WorkbookPath>
                                </ueab:ExcelApplicationCard>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <ui:ForEachRow.DataTable>
                            <InArgument x:TypeArguments="sd:DataTable">
                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">i_dt_hrData</CSharpValue>
                            </InArgument>
                          </ui:ForEachRow.DataTable>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="해당 워크플로우 cpl 파일이 있으면 &#xA;이미 처리한 건으로, 건너뛰기" DisplayName="COM_Check_Or_Create_CplFile" sap:VirtualizedContainerService.HintSize="724,124" sap2010:WorkflowViewState.IdRef="InvokeProcess_2" ProcessName="COM_Check_Or_Create_CplFile">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplPath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">i_config["RPA_cpl"]</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplFileName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">$"{jobInfo.WorkflowName}.cpl"</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_workFlowName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">jobInfo.WorkflowName</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isCheck">False</InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:LogMessage DisplayName="End Log Message" sap:VirtualizedContainerService.HintSize="724,52" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">$"End {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="815,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="300,531" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine sap2010:Annotation.AnnotationText="에러메세지" DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,83" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">$"Error Msg : {exception.Message}"</CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <ui:LogMessage DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">$"Error Msg : {exception.Message}"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="에러화면캡쳐&#xA;" DisplayName="TakeScreenshot" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="TakeScreenshot.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InOutArgument x:TypeArguments="x:String" x:Key="io_str_filePath" />
                        <InArgument x:TypeArguments="x:String" x:Key="i_str_folderPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">i_config["RPA_ScreenShot"]</CSharpValue>
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <If sap2010:Annotation.AnnotationText="Then = 재수행&#xA;Else = Rethrow" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">int_retryCnt &lt; Convert.ToInt32(i_config["SeqMaxRetryCnt"].ToString())</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,416" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">$"Start [{jobInfo.WorkflowName}] MaxRetry[{int_retryCnt}] Get to"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                          <Rethrow sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="815,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">exception.Message</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">bol_isFail</CSharpValue>
      </ui:InterruptibleDoWhile.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>