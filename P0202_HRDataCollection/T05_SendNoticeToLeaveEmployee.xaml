<Activity mc:Ignorable="sap sap2010" x:Class="시퀀스" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="i_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1158,3681</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="시퀀스" sap:VirtualizedContainerService.HintSize="1105,3576" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="bol_isFail" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="int_retryCnt" />
      <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobInfo" />
      <Variable x:TypeArguments="x:String" Name="str_outputFileName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_output" />
      <Variable x:TypeArguments="x:Int32" Name="int_remaingDays" />
      <Variable x:TypeArguments="x:String" Name="str_mailBody" />
      <Variable x:TypeArguments="x:String" Name="str_mailSubject" />
      <Variable x:TypeArguments="x:String" Name="str_attachFilePath" />
      <Variable x:TypeArguments="x:String" Name="str_msgBody" />
      <Variable x:TypeArguments="x:String" Name="str_empMailAddr" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="조건 : bol_isFail" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1063,3488" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="1029,3321" sap2010:WorkflowViewState.IdRef="Sequence_67">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="987,3233" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="949,3005" sap2010:WorkflowViewState.IdRef="Sequence_63">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_hrData" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="907,25" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_2">
                  <ui:GetCurrentJobInfo.Result>
                    <OutArgument x:TypeArguments="ui:CurrentJobInfo">
                      <CSharpReference x:TypeArguments="ui:CurrentJobInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">jobInfo</CSharpReference>
                    </OutArgument>
                  </ui:GetCurrentJobInfo.Result>
                </ui:GetCurrentJobInfo>
                <ui:LogMessage DisplayName="Start Log Message" sap:VirtualizedContainerService.HintSize="907,52" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">$"Start {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="초기값 설정&#xA;메일, 문자 값을 배열에 넣기&#xA;휴직파견복직현황(알림용) 파일명&#xA;복직원 첨부파일" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="907,124" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">bol_isFail</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">int_retryCnt</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">int_retryCnt+1</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">str_outputFileName</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">i_config["HRM08_Noti_FileName"]</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">str_attachFilePath</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">Path.Combine(i_config["RPA_Data"], i_config["ReinstatedAttachFileName"])</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="인사정보 데이터테이블로 가져오기" DisplayName="COM_GetHRData" sap:VirtualizedContainerService.HintSize="907,197" sap2010:WorkflowViewState.IdRef="InvokeProcess_4" ProcessName="COM_GetHRData">
                  <ui:InvokeProcess.Arguments>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="o_dt_hrData">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">dt_hrData</CSharpReference>
                    </OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_folderPath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">i_config["RPA_Input"]</CSharpValue>
                    </InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <Sequence DisplayName="발령종료대상에게 문자, 메일 발송" sap:VirtualizedContainerService.HintSize="907,2267" sap2010:WorkflowViewState.IdRef="Sequence_62">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="678,1941" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="644,1854" sap2010:WorkflowViewState.IdRef="Sequence_61">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="알림메일과 문자를 보내야할 list 엑셀 열기&#xA;Path.Combine(i_config[&quot;RPA_Data&quot;], outputFileName)" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="602,1766" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="568,1415" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="데이터테이블로 읽기" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="526,83" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1" SheetName="Sheet1">
                                    <ui:ExcelReadRange.DataTable>
                                      <OutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">dt_output</CSharpReference>
                                      </OutArgument>
                                    </ui:ExcelReadRange.DataTable>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelReadRange>
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="526,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="300,182" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="데이터테이블 칼럼 타입을 변경" Code="DataTable dt = new DataTable();&#xA;&#xA;foreach(DataColumn column in dt_output.Columns){&#xA;&#x9;dt.Columns.Add(column.ColumnName, typeof(string));&#xA;}&#xA;&#xA;foreach (DataRow row in dt_output.Rows){&#xA;    DataRow newRow = dt.NewRow();&#xA;    foreach (DataColumn column in dt_output.Columns){&#xA;        newRow[column.ColumnName] = row[column.ColumnName].ToString();&#xA;    }&#xA;    dt.Rows.Add(newRow);&#xA;}&#xA;&#xA;dt_output.Clear();&#xA;dt_output = dt;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="InvokeCode_7" Language="CSharp">
                                          <ui:InvokeCode.Arguments>
                                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt_output">
                                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">dt_output</CSharpReference>
                                            </InOutArgument>
                                          </ui:InvokeCode.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeCode>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="데이터테이블을 반복하여 메일, 문자 알림 반복" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="526,1112" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="492,895" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="재수행 로직 확인" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap2010:Annotation.AnnotationText="알림일자에 값이 입력되어있으면 이미 완료된 건으로 보고 건너뛰기" sap:VirtualizedContainerService.HintSize="388,109" sap2010:WorkflowViewState.IdRef="If_10">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">!string.IsNullOrEmpty(row["알림일자"].ToString())</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_15">
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">$"[{row["알림일자"].ToString()} 문자, 메일 알림 완료] : {row["직원명"].ToString()}({row["직원번호"].ToString()})"</CSharpValue>
                                                    </InArgument>
                                                  </WriteLine>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_7" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                          <Sequence DisplayName="퇴사자, 근무중 직원은 알림을 진행하지 않음" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap2010:Annotation.AnnotationText="퇴사자, 근무중은 continue" sap:VirtualizedContainerService.HintSize="410,449" sap2010:WorkflowViewState.IdRef="If_19">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">row["직위명"].ToString() == "퇴사자" || row["직위명"].ToString() == "근무중"</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,236" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="알림 칼럼에 X를 표시" Code="/*&#xA;담당자알림여부&#x9; 당사자알림여부(메일)&#x9;당사자알림여부(문자)&#x9;알림일자&#xA;*/&#xA;row[&quot;담당자알림여부&quot;] = &quot;X&quot;;&#xA;row[&quot;당사자알림여부(메일)&quot;] = &quot;X&quot;;&#xA;row[&quot;당사자알림여부(문자)&quot;] = &quot;X&quot;;&#xA;row[&quot;알림일자&quot;] = &quot;X&quot;;&#xA;&#xA;Console.WriteLine($&quot;{row[&quot;직원명&quot;].ToString()}({row[&quot;직원번호&quot;].ToString()}) : {row[&quot;직위명&quot;].ToString()} 입니다. (메일, 문자 알림 생략)&quot;);" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="InvokeCode_8" Language="CSharp">
                                                    <ui:InvokeCode.Arguments>
                                                      <InOutArgument x:TypeArguments="sd:DataRow" x:Key="row">
                                                        <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">row</CSharpReference>
                                                      </InOutArgument>
                                                    </ui:InvokeCode.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeCode>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_9" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                          <Sequence DisplayName="잔여일자 확인(종료일이 3주~4주 사이 인 건만 알림)" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="종료일 타입 변경" ColumnName="종료일" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="410,83" sap2010:WorkflowViewState.IdRef="UpdateRowItem_1">
                                              <ui:UpdateRowItem.Row>
                                                <InArgument x:TypeArguments="sd:DataRow">
                                                  <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">row</CSharpValue>
                                                </InArgument>
                                              </ui:UpdateRowItem.Row>
                                              <ui:UpdateRowItem.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">DateTime.ParseExact(row["종료일"].ToString(), "MM/dd/yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")</CSharpValue>
                                                </InArgument>
                                              </ui:UpdateRowItem.Value>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:UpdateRowItem>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="잔여일자계산&#xA;종료일 - 오늘일자" Code="Console.WriteLine($&quot;종료일 : {str_endDate}&quot;);&#xA;&#xA;// 잔여일자 계산&#xA;try{ // yyyy-MM-dd&#xA;&#x9;int_remaingDays = (int)(DateTime.ParseExact(str_endDate, &quot;yyyy-MM-dd&quot;,&#xA;&#x9;System.Globalization.CultureInfo.InvariantCulture)- DateTime.Today).Days;&#xA;}&#xA;catch(Exception e){&#xA;&#x9;Console.WriteLine(e.Message);&#xA;}&#xA;&#xA;Console.WriteLine($&quot;잔여일자 : {int_remaingDays}&quot;);" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="410,94" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="str_endDate">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">row["종료일"].ToString()</CSharpValue>
                                                </InArgument>
                                                <OutArgument x:TypeArguments="x:Int32" x:Key="int_remaingDays">
                                                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">int_remaingDays</CSharpReference>
                                                </OutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                            <If sap2010:Annotation.AnnotationText="종료일 - 오늘일자 가 27~21일 사이일 경우만 알림메일, 문자 발송" sap:VirtualizedContainerService.HintSize="410,326" sap2010:WorkflowViewState.IdRef="If_20">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">!(int_remaingDays &gt;= 21) || !(int_remaingDays &lt;= 27)</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_8" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                          <Sequence DisplayName="초기화 및 메일, 문자에 기입할 내용 입력" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" sap2010:Annotation.AnnotationText="크롬닫기" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="chrome">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:KillProcess>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="메일제목, 메일본문, 첨부파일, 문자내용" Code="/*&#xA;{0} yy년 M월 d일(종료일)&#xA;{1} M. d(종료일+1)&#xA;{2} M월 d일(발송일+7)&#xA;{3} ddd(발송일+7)&#xA;*/&#xA;try{&#xA;&#x9;// 종료일&#xA;&#x9;DateTime endDate = DateTime.ParseExact(str_endDate, &quot;yyyy-MM-dd&quot;, System.Globalization.CultureInfo.InvariantCulture);&#xA;&#x9;// 복귀일&#xA;&#x9;DateTime backDate = endDate.AddDays(1);&#xA;&#x9;// 제출일(오늘+7)&#xA;&#x9;DateTime submitDate= DateTime.Today.AddDays(7);&#xA;&#x9;&#xA;&#x9;// 메일제목&#xA;&#x9;str_mailSubject = i_config[&quot;Mail_Reinstated_Subject&quot;];&#xA;&#x9;// 메일본문&#xA;&#x9;str_mailBody = string.Format(i_config[&quot;Mail_Reinstated_Body&quot;],&#xA;&#x9;&#x9;endDate.ToString(&quot;yy년 M월 d일&quot;),&#xA;&#x9;&#x9;backDate.ToString(&quot;M. d&quot;),&#xA;&#x9;&#x9;submitDate.ToString(&quot;M월 d일&quot;),&#xA;&#x9;&#x9;submitDate.ToString(&quot;ddd&quot;, new System.Globalization.CultureInfo(&quot;ko-KR&quot;)));&#xA;&#x9;// 첨부파일&#xA;&#x9;&#xA;&#x9;// 문자내용&#xA;&#x9;str_msgBody = string.Format(i_config[&quot;Msg_Reinstated_Body&quot;],&#xA;&#x9;&#x9;submitDate.ToString(&quot;M월 d일&quot;),&#xA;&#x9;&#x9;submitDate.ToString(&quot;ddd&quot;, new System.Globalization.CultureInfo(&quot;ko-KR&quot;)));&#xA;&#x9;&#xA;&#x9;// 출력&#xA;&#x9;Console.WriteLine($&quot;메일제목 : {str_mailSubject}&quot;);&#xA;&#x9;Console.WriteLine($&quot;메일본문 : {str_mailBody}&quot;);&#xA;&#x9;Console.WriteLine($&quot;문자내용 : {str_msgBody}&quot;);&#xA;&#x9;&#xA;}catch(Exception e){&#xA;&#x9;Console.WriteLine(e.Message);&#xA;&#x9;throw e;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="str_endDate">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">row["종료일"].ToString()</CSharpValue>
                                                </InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="str_mailBody">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">str_mailBody</CSharpReference>
                                                </OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="str_mailSubject">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">str_mailSubject</CSharpReference>
                                                </OutArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                                                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">i_config</CSharpValue>
                                                </InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="str_msgBody">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">str_msgBody</CSharpReference>
                                                </OutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                          </Sequence>
                                          <Sequence DisplayName="메일" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap2010:Annotation.AnnotationText="&quot;담당자알림여부&quot; 칼럼 값과 당사자알림여부(메일) 칼럼 값이&#xA;비어있으면 메일 알림 진행&#xA;비어있지 않으면(O or X) 메일 알림을 진행하지 않음" DisplayName="메일전송 유무 확인" sap:VirtualizedContainerService.HintSize="510,962" sap2010:WorkflowViewState.IdRef="If_13">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">string.IsNullOrEmpty(row["담당자알림여부"].ToString()) &amp;&amp; string.IsNullOrEmpty(row["당사자알림여부(메일)"].ToString())</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="476,643" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="str_empMailAddr = row[&quot;부서명&quot;].ToString()" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">
                                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">str_empMailAddr</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">row["부서명"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:MultipleAssign>
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WriteLine_16">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">$"종료일 : {row["종료일"].ToString()}"</CSharpValue>
                                                    </InArgument>
                                                  </WriteLine>
                                                  <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="COM_SendMail" DisplayName="COM_SendMail" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_7" ProcessName="COM_SendMail">
                                                    <ui:InvokeProcess.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                                                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">i_config</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isAttach">True</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_mailRecv">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">str_empMailAddr</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_mailSubject">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">str_mailSubject</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBody">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">str_mailBody</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_attachFilePath">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">str_attachFilePath</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_assetName">Credential_Hanmaru(RPA2)</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_mailcc">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">i_config["FieldWorker"]</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_mailBcc">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">i_config["rpaOperator"]</CSharpValue>
                                                      </InArgument>
                                                    </ui:InvokeProcess.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeProcess>
                                                  <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="담당자알림여부 = O" ColumnName="담당자알림여부" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="UpdateRowItem_5">
                                                    <ui:UpdateRowItem.Row>
                                                      <InArgument x:TypeArguments="sd:DataRow">
                                                        <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">row</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Row>
                                                    <ui:UpdateRowItem.Value>
                                                      <InArgument x:TypeArguments="x:Object">
                                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">"O"</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:UpdateRowItem>
                                                  <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="당사자알림여부(메일) = O&#xA;" ColumnName="당사자알림여부(메일)" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="UpdateRowItem_6">
                                                    <ui:UpdateRowItem.Row>
                                                      <InArgument x:TypeArguments="sd:DataRow">
                                                        <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">row</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Row>
                                                    <ui:UpdateRowItem.Value>
                                                      <InArgument x:TypeArguments="x:Object">
                                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">"O"</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:UpdateRowItem>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <ueab:WriteRangeX sap2010:Annotation.AnnotationText="데이터테이블 엑셀에 쓰기" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False">
                                              <ueab:WriteRangeX.Destination>
                                                <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">Excel.Sheet["Sheet1"].Range["A1"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Destination>
                                              <ueab:WriteRangeX.Source>
                                                <InArgument x:TypeArguments="sd:DataTable">
                                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">dt_output</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Source>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:WriteRangeX>
                                            <ueab:SaveExcelFileX sap2010:Annotation.AnnotationText="엑셀 중간저장" DisplayName="Save Excel File" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="SaveExcelFileX_1">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:SaveExcelFileX.Workbook>
                                                <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                                  <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">Excel</CSharpValue>
                                                </InArgument>
                                              </ueab:SaveExcelFileX.Workbook>
                                            </ueab:SaveExcelFileX>
                                          </Sequence>
                                          <Sequence DisplayName="문자" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap2010:Annotation.AnnotationText="&quot;당사자알림여부(문자)&quot; 칼럼 값이&#xA;비어있으면 문자 알림 진행&#xA;비어있지 않으면(O or 퇴사자 or 근무중) 문자 알림을 진행하지 않음" DisplayName="문자전송 유무 확인" sap:VirtualizedContainerService.HintSize="510,828" sap2010:WorkflowViewState.IdRef="If_15">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">string.IsNullOrEmpty(row["당사자알림여부(문자)"].ToString())</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="476,509" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                                    <ui:CommentOut.Body>
                                                      <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="376,232" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="(테스트)문자보내기" DisplayName="T05_02_SendResultBySMS" sap:VirtualizedContainerService.HintSize="334,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="T05_01_SendResultBySMS.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                                                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">i_config</CSharpValue>
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                                                            <InArgument x:TypeArguments="x:String" x:Key="i_str_empID">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">row["직원번호"].ToString()</CSharpValue>
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="i_str_empName" />
                                                            <InArgument x:TypeArguments="x:String" x:Key="i_str_msgBody">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">str_msgBody</CSharpValue>
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_hrData">
                                                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">dt_hrData</CSharpValue>
                                                            </InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:InvokeWorkflowFile>
                                                      </Sequence>
                                                    </ui:CommentOut.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:CommentOut>
                                                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="문자내용" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">
                                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">str_msgBody</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">string.Format(str_msgBody, row["직원명"].ToString(), row["직원번호"].ToString())</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:MultipleAssign>
                                                  <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="문자발송" DisplayName="COM_SendSMS" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeProcess_5" ProcessName="COM_SendSMS">
                                                    <ui:InvokeProcess.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_msgBody">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">str_msgBody</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_sendCallNumber">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">i_config["SendTelNumber"]</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_hrData">
                                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">dt_hrData</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="i_str_recvEmpID">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">row["직원번호"].ToString()</CSharpValue>
                                                      </InArgument>
                                                    </ui:InvokeProcess.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeProcess>
                                                  <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="문자 전송 완료 후 엑셀에 결과 작성(O)" ColumnName="당사자알림여부(문자)" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="UpdateRowItem_2">
                                                    <ui:UpdateRowItem.Row>
                                                      <InArgument x:TypeArguments="sd:DataRow">
                                                        <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">row</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Row>
                                                    <ui:UpdateRowItem.Value>
                                                      <InArgument x:TypeArguments="x:Object">
                                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">"O"</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:UpdateRowItem>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <ueab:WriteRangeX sap2010:Annotation.AnnotationText="데이터테이블 엑셀에 쓰기" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False">
                                              <ueab:WriteRangeX.Destination>
                                                <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">Excel.Sheet["Sheet1"].Range["A1"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Destination>
                                              <ueab:WriteRangeX.Source>
                                                <InArgument x:TypeArguments="sd:DataTable">
                                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">dt_output</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Source>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:WriteRangeX>
                                            <ueab:SaveExcelFileX sap2010:Annotation.AnnotationText="엑셀 중간저장" DisplayName="Save Excel File" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="SaveExcelFileX_2">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:SaveExcelFileX.Workbook>
                                                <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                                  <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">Excel</CSharpValue>
                                                </InArgument>
                                              </ueab:SaveExcelFileX.Workbook>
                                            </ueab:SaveExcelFileX>
                                          </Sequence>
                                          <Sequence DisplayName="메일, 문자 알림 마무리 후 알림일자 기입" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap2010:Annotation.AnnotationText="알림여부 확인 칼럼이 전부다 O일 경우 알림일자를 입력" sap:VirtualizedContainerService.HintSize="434,476" sap2010:WorkflowViewState.IdRef="If_18">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154" xml:space="preserve">row["담당자알림여부"].ToString().Equals("O") &amp;&amp; 
row["당사자알림여부(메일)"].ToString().Equals("O") &amp;&amp; 
row["당사자알림여부(문자)"].ToString().Equals("O")</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="342,263" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="알림일자" ColumnName="알림일자" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="300,83" sap2010:WorkflowViewState.IdRef="UpdateRowItem_4">
                                                    <ui:UpdateRowItem.Row>
                                                      <InArgument x:TypeArguments="sd:DataRow">
                                                        <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">row</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Row>
                                                    <ui:UpdateRowItem.Value>
                                                      <InArgument x:TypeArguments="x:Object">
                                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">DateTime.Now.ToString("yyyy-MM-dd")</CSharpValue>
                                                      </InArgument>
                                                    </ui:UpdateRowItem.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:UpdateRowItem>
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="300,52" sap2010:WorkflowViewState.IdRef="WriteLine_23">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">$"[{row["알림일자"].ToString()} 문자, 메일 알림 완료] : {row["직원명"].ToString()}({row["직원번호"].ToString()})"</CSharpValue>
                                                    </InArgument>
                                                  </WriteLine>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56" />
                                              </If.Else>
                                            </If>
                                            <ueab:WriteRangeX sap2010:Annotation.AnnotationText="데이터테이블 엑셀에 쓰기" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False">
                                              <ueab:WriteRangeX.Destination>
                                                <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">Excel.Sheet["Sheet1"].Range["A1"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Destination>
                                              <ueab:WriteRangeX.Source>
                                                <InArgument x:TypeArguments="sd:DataTable">
                                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">dt_output</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteRangeX.Source>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:WriteRangeX>
                                            <ueab:AutoFitX sap2010:Annotation.AnnotationText="열, 행 너비 자동조정" Columns="True" DisplayName="Autofit Range" sap:VirtualizedContainerService.HintSize="434,147" sap2010:WorkflowViewState.IdRef="AutoFitX_1" Rows="True">
                                              <ueab:AutoFitX.Range>
                                                <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">Excel.Sheet["Sheet1"]</CSharpValue>
                                                </InArgument>
                                              </ueab:AutoFitX.Range>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:AutoFitX>
                                            <ueab:SaveExcelFileX sap2010:Annotation.AnnotationText="엑셀 중간저장" DisplayName="Save Excel File" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="SaveExcelFileX_3">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:SaveExcelFileX.Workbook>
                                                <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                                  <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">Excel</CSharpValue>
                                                </InArgument>
                                              </ueab:SaveExcelFileX.Workbook>
                                            </ueab:SaveExcelFileX>
                                          </Sequence>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <ui:ForEachRow.DataTable>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">dt_output</CSharpValue>
                                      </InArgument>
                                    </ui:ForEachRow.DataTable>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ExcelApplicationCard.WorkbookPath>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">Path.Combine(i_config["RPA_Data"], str_outputFileName)</CSharpValue>
                              </InArgument>
                            </ueab:ExcelApplicationCard.WorkbookPath>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                  <If sap2010:Annotation.AnnotationText="Copy Data-&gt;Output" sap:VirtualizedContainerService.HintSize="678,83" sap2010:WorkflowViewState.IdRef="If_21">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">!File.Exists(Path.Combine(i_config["RPA_Output"], str_outputFileName))</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,273" sap2010:WorkflowViewState.IdRef="Sequence_73">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Data-&gt;Output" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="CopyFile_1">
                          <ui:CopyFile.Destination>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">Path.Combine(i_config["RPA_Output"], str_outputFileName)</CSharpValue>
                            </InArgument>
                          </ui:CopyFile.Destination>
                          <ui:CopyFile.Path>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">Path.Combine(i_config["RPA_Data"], str_outputFileName)</CSharpValue>
                            </InArgument>
                          </ui:CopyFile.Path>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CopyFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_74" />
                    </If.Else>
                  </If>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="678,52" sap2010:WorkflowViewState.IdRef="WriteLine_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">$"Copied : {Path.Combine(i_config["RPA_Output"], str_outputFileName)}"</CSharpValue>
                    </InArgument>
                  </WriteLine>
                </Sequence>
                <ui:LogMessage DisplayName="End Log Message" sap:VirtualizedContainerService.HintSize="907,52" sap2010:WorkflowViewState.IdRef="LogMessage_7">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">$"End {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="953,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="300,397" sap2010:WorkflowViewState.IdRef="Sequence_66">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine sap2010:Annotation.AnnotationText="에러메세지" DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,83" sap2010:WorkflowViewState.IdRef="WriteLine_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">$"Error Msg : {exception.Message}"</CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <ui:LogMessage DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="LogMessage_8">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">$"Error Msg : {exception.Message}"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <If sap2010:Annotation.AnnotationText="Then = 재수행&#xA;Else = Rethrow" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="If_17">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">int_retryCnt &lt; Convert.ToInt32(i_config["SeqMaxRetryCnt"].ToString())</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_64">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,416" sap2010:WorkflowViewState.IdRef="Sequence_65">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">$"Start [{jobInfo.WorkflowName}] MaxRetry[{int_retryCnt}] Get to"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                          <Rethrow sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">bol_isFail</CSharpValue>
      </ui:InterruptibleDoWhile.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>