<Activity mc:Ignorable="sap sap2010" x:Class="시퀀스" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="i_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="i_dt_company" Type="InArgument(sd:DataTable)" />
    <x:Property Name="i_dt_names" Type="InArgument(sd:DataTable)" />
    <x:Property Name="i_dt_university" Type="InArgument(sd:DataTable)" />
    <x:Property Name="i_str_lastMonth" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1158,5079</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="시퀀스" sap:VirtualizedContainerService.HintSize="1088,5014" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="bol_isFail" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="int_retryCnt" />
      <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobInfo" />
      <Variable x:TypeArguments="x:String" Name="str_docuTitle" />
      <Variable x:TypeArguments="x:String" Name="str_titleColName" />
      <Variable x:TypeArguments="x:String" Name="str_exceptCheckFileName" />
      <Variable x:TypeArguments="x:String" Name="str_exceptCheckFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="조건 : bol_isFail" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="1046,4926" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="1012,4759" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="970,4671" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="932,4421" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="890,25" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_1">
                  <ui:GetCurrentJobInfo.Result>
                    <OutArgument x:TypeArguments="ui:CurrentJobInfo">
                      <CSharpReference x:TypeArguments="ui:CurrentJobInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(ui:CurrentJobInfo)" />
                        </CSharpReference.Result>jobInfo</CSharpReference>
                    </OutArgument>
                  </ui:GetCurrentJobInfo.Result>
                </ui:GetCurrentJobInfo>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="COM_Check_Or_Create_CplFile" sap:VirtualizedContainerService.HintSize="890,52" sap2010:WorkflowViewState.IdRef="InvokeProcess_1" ProcessName="COM_Check_Or_Create_CplFile">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplPath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>i_config["RPA_cpl"]</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplFileName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>$"{jobInfo.WorkflowName}.cpl"</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_workFlowName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>jobInfo.WorkflowName</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isCheck">True</InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:LogMessage DisplayName="Start Log Message" sap:VirtualizedContainerService.HintSize="890,52" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="ui:LogLevel" />
                        </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:Object" />
                        </CSharpValue.Result>$"Start {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="초기값 설정" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="890,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">
                              <CSharpReference.Result>
                                <OutArgument x:TypeArguments="Location(x:Boolean)" />
                              </CSharpReference.Result>bol_isFail</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">
                              <CSharpReference.Result>
                                <OutArgument x:TypeArguments="Location(x:Int32)" />
                              </CSharpReference.Result>int_retryCnt</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">
                              <CSharpValue.Result>
                                <OutArgument x:TypeArguments="x:Int32" />
                              </CSharpValue.Result>int_retryCnt+1</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <Sequence DisplayName="비식별화결과파일" sap:VirtualizedContainerService.HintSize="890,81" sap2010:WorkflowViewState.IdRef="Sequence_35">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="비식별화결과파일명(yyMM)&#xD;&#xA;파일경로" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,189" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">str_exceptCheckFileName</CSharpReference>
                            </OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">string.Format(i_config["CheckExceptFileName"], i_str_lastMonth)</CSharpValue>
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">str_exceptCheckFilePath</CSharpReference>
                            </OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">Path.Combine(i_config["RPA_Output"], str_exceptCheckFileName)</CSharpValue>
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <If sap2010:Annotation.AnnotationText="Data-&gt;Output&#xA;비식별화결과파일 복사" sap:VirtualizedContainerService.HintSize="479,466" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">!File.Exists(str_exceptCheckFilePath)</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,242" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CopyFile ContinueOnError="{x:Null}" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="CopyFile_1">
                          <ui:CopyFile.Destination>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">str_exceptCheckFilePath</CSharpValue>
                            </InArgument>
                          </ui:CopyFile.Destination>
                          <ui:CopyFile.Path>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">Path.Combine(i_config["RPA_Data"], i_config["CheckExceptFileName"])</CSharpValue>
                            </InArgument>
                          </ui:CopyFile.Path>
                        </ui:CopyFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34" />
                    </If.Else>
                  </If>
                </Sequence>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="890,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="376,232" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="제외키워드 데이터테이블" DisplayName="T06_01_GetExceptKeywords" sap:VirtualizedContainerService.HintSize="334,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="T05_01_GetExceptKeywords.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="o_dt_except">
                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">dt_except</CSharpReference>
                          </OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="i_str_excepFilePath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">Path.Combine(i_config["RPA_Data"], i_config["ExceptFileName"])</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:ForEachFileX DisplayName="For Each File In Folder" Filter="*xls*" sap:VirtualizedContainerService.HintSize="890,3469" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                  <ui:ForEachFileX.Body>
                    <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="856,3209" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="누락파일은 작업을 하지 않음" sap:VirtualizedContainerService.HintSize="814,83" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">Path.GetFileNameWithoutExtension(CurrentFile.ToString()).Contains("누락") || Path.GetFileNameWithoutExtension(CurrentFile.ToString()).Contains("비식별화")</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17" />
                          </If.Else>
                        </If>
                        <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="전자결재 문서 엑셀 열기" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="814,2998" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                          <ueab:ExcelProcessScopeX.Body>
                            <ActivityAction x:TypeArguments="ui:IExcelProcess">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="780,2880" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="738,90" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="738,2662" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None">
                                  <ueab:ExcelApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="704,2393" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ForEachSheetX DisplayName="For Each Excel Sheet" sap:VirtualizedContainerService.HintSize="662,2305" sap2010:WorkflowViewState.IdRef="ForEachSheetX_1">
                                          <ueab:ForEachSheetX.Body>
                                            <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                              <ActivityAction.Argument1>
                                                <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                              </ActivityAction.Argument1>
                                              <ActivityAction.Argument2>
                                                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                              </ActivityAction.Argument2>
                                              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="628,2141" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If sap2010:Annotation.AnnotationText="'대내외접수' 시트는 '문서명' 칼럼을 참조" sap:VirtualizedContainerService.HintSize="586,94" sap2010:WorkflowViewState.IdRef="If_5">
                                                  <If.Condition>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">CurrentSheet.Name.Contains("대내외접수")</CSharpValue>
                                                    </InArgument>
                                                  </If.Condition>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">str_titleColName</CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">문서명</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">
                                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">str_titleColName</CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">기록물건명</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="586,1919" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" SaveAfterEachRow="False">
                                                  <ueab:ExcelForEachRowX.Body>
                                                    <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                                      <ActivityAction.Argument1>
                                                        <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                                      </ActivityAction.Argument1>
                                                      <ActivityAction.Argument2>
                                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                                      </ActivityAction.Argument2>
                                                      <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="552,1729" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If sap2010:Annotation.AnnotationText="이미 처리한 Row 일 경우 건너뛰기" sap:VirtualizedContainerService.HintSize="510,94" sap2010:WorkflowViewState.IdRef="If_4">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">File.Exists(Path.Combine(i_config["RPA_cpl"], $"{jobInfo.WorkflowName}_{CurrentRow["문서번호"].ToString()}.cpl"))</CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If.Then>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_14">
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">$"[Check] {jobInfo.WorkflowName}_{CurrentRow["문서번호"].ToString()}.cpl"</CSharpValue>
                                                                </InArgument>
                                                              </WriteLine>
                                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19" />
                                                          </If.Else>
                                                        </If>
                                                        <Sequence DisplayName="비식별화 작업" sap:VirtualizedContainerService.HintSize="510,716" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap2010:Annotation.AnnotationText="기록물건명 or 문서명 을 변수로 받기" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">
                                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">
                                                                  <CSharpReference.Result>
                                                                    <OutArgument x:TypeArguments="Location(x:String)" />
                                                                  </CSharpReference.Result>str_docuTitle</CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">
                                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">CurrentRow[str_titleColName].ToString()</CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </Assign>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="비식별화-회사1" Code="/*&#xA;아래 패턴에 대해 비식별화&#xA;((주)회사이름)&#xA;(회사이름(주))&#xA;*/&#xA;&#xA;string title = str_docuTitle;&#xA;&#xA;string pattern1 = @&quot;\(\(주\)(.*?)\)&quot;;&#xA;string pattern2 = @&quot;\((.*?)\(주\)\)&quot;;&#xA;&#xA;// Replace for pattern1&#xA;title = System.Text.RegularExpressions.Regex.Replace(title, pattern1, match =&gt;{&#xA;&#x9;string companyName = match.Groups[1].Value;&#xA;&#x9;return $&quot;((주){new string('*', companyName.Length)})&quot;;&#xA;});&#xA;&#xA;// Replace for pattern2&#xA;title = System.Text.RegularExpressions.Regex.Replace(title, pattern2, match =&gt;{&#xA;&#x9;string companyName = match.Groups[1].Value;&#xA;&#x9;return $&quot;({companyName[0]}{new string('*', companyName.Length+2)})&quot;;&#xA;});&#xA;&#xA;&#x9;&#x9;&#x9;&#xA;// Input 문자열을 Replace 하여 Output&#xA;//title = title.Replace(company, maskedCompany);&#xA;//Console.WriteLine($&quot;Title : {title}&quot;);&#xA;str_docuTitle = title;&#xA;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeCode_6" Language="CSharp">
                                                            <ui:InvokeCode.Arguments>
                                                              <InOutArgument x:TypeArguments="x:String" x:Key="str_docuTitle">
                                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">str_docuTitle</CSharpReference>
                                                              </InOutArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="비식별화-회사2" Code="// 비식별화된 문서 초기화&#xA;string updatedDocument = str_docuTitle;&#xA;&#xA;// 회사 이름 비식별화 및 제외키워드 확인&#xA;foreach(DataRow companyRow in i_dt_company.Rows){&#xA;&#x9;string companyName = companyRow.Field&lt;string&gt;(&quot;거래처명&quot;);&#xA;&#xA;&#x9;// 정식 명칭 비식별화&#xA;&#x9;if(updatedDocument.Contains(companyName)){&#xA;&#x9;&#x9;string maskedCompanyName = companyName.Length &lt; 2&#xA;&#x9;&#x9;&#x9;? companyName&#xA;&#x9;&#x9;&#x9;: companyName[0] + new string('*', companyName.Length -1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;updatedDocument = updatedDocument.Replace(companyName, maskedCompanyName);&#xA;&#x9;&#x9;break;&#xA;&#x9;}&#xA;}&#xA;// 출력&#xA;if(str_docuTitle != updatedDocument){&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;Console.WriteLine(&quot;[회사2] Before : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{str_docuTitle}&quot;);&#xA;&#x9;Console.WriteLine();&#xA;&#x9;Console.WriteLine(&quot;[회사2] After : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{updatedDocument}&quot;);&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;&#xA;&#x9;str_docuTitle = updatedDocument;&#xA;}&#xA;&#x9;&#xA;&#xA;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeCode_10" Language="CSharp">
                                                            <ui:InvokeCode.Arguments>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_company">
                                                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">i_dt_company</CSharpValue>
                                                              </InArgument>
                                                              <InOutArgument x:TypeArguments="x:String" x:Key="str_docuTitle">
                                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">str_docuTitle</CSharpReference>
                                                              </InOutArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="비식별화-학교" Code="// 비식별화된 문서 초기화&#xA;string updatedDocument = str_docuTitle;&#xA;&#xA;// 학교 이름 비식별화 및 제외키워드 확인&#xA;foreach(DataRow univRow in i_dt_university.Rows){&#xA;&#x9;string univName = univRow.Field&lt;string&gt;(&quot;학교명&quot;);&#xA;&#x9;&#xA;&#x9;// 정식 명칭 비식별화&#xA;&#x9;if(updatedDocument.Contains(univName)){&#xA;&#x9;&#x9;string maskedUnivName = univName.Length &lt; 2&#xA;&#x9;&#x9;&#x9;? univName&#xA;&#x9;&#x9;&#x9;: univName[0] + new string('*', univName.Length -1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;updatedDocument = updatedDocument.Replace(univName, maskedUnivName);&#xA;&#x9;&#x9;break;&#xA;&#x9;}&#xA;&#x9;/*&#xA;&#x9;약칭 : 서울대학교 =&gt; 서울대, 이화여자대학교 =&gt; 이화여대, 한국외국어대학교 =&gt; 한국외대&#xA;&#x9;*/&#xA;&#x9;// 약칭 생성 및 비 식별화&#xA;&#x9;string alias = univName.Replace(&quot;대학교&quot;, &quot;대&quot;).Replace(&quot;여자대학교&quot;, &quot;여대&quot;).Replace(&quot;외국어대학교&quot;, &quot;외대&quot;);&#xA;&#x9;&#xA;&#x9;if(updatedDocument.Contains(alias)){&#xA;&#x9;&#x9;string maskedAlias = alias.Length &lt; 2&#xA;&#x9;&#x9;&#x9;? alias&#xA;&#x9;&#x9;&#x9;: alias[0] + new string('*', alias.Length -1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;updatedDocument = updatedDocument.Replace(alias, maskedAlias);&#xA;&#x9;&#x9;break;&#xA;&#x9;}&#xA;}&#xA;&#xA;if(str_docuTitle != updatedDocument){&#xA;&#x9;// 출력&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;Console.WriteLine(&quot;[대학교] Before : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{str_docuTitle}&quot;);&#xA;&#x9;Console.WriteLine();&#xA;&#x9;Console.WriteLine(&quot;[대학교] After : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{updatedDocument}&quot;);&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;&#xA;&#x9;str_docuTitle = updatedDocument;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                                                            <ui:InvokeCode.Arguments>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_university">
                                                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">
                                                                  <CSharpValue.Result>
                                                                    <OutArgument x:TypeArguments="sd:DataTable" />
                                                                  </CSharpValue.Result>i_dt_university</CSharpValue>
                                                              </InArgument>
                                                              <InOutArgument x:TypeArguments="x:String" x:Key="str_docuTitle">
                                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">
                                                                  <CSharpReference.Result>
                                                                    <OutArgument x:TypeArguments="Location(x:String)" />
                                                                  </CSharpReference.Result>str_docuTitle</CSharpReference>
                                                              </InOutArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="비식별화-이름" Code="// 비식별화된 문서 초기화&#xA;string updatedDocument = str_docuTitle;&#xA;&#xA;// 이름 비식별화 및 제외키워드 확인&#xA;foreach(DataRow nameRow in i_dt_names.Rows){&#xA;&#x9;string name = nameRow.Field&lt;string&gt;(&quot;거래처명&quot;);&#xA;&#x9;&#xA;&#x9;// 정식 명칭 비식별화&#xA;&#x9;if(updatedDocument.Contains(name)){&#xA;&#x9;&#x9;string maskedName = name.Length &lt; 2&#xA;&#x9;&#x9;&#x9;? name&#xA;&#x9;&#x9;&#x9;: name[0] + new string('*', name.Length -1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;updatedDocument = updatedDocument.Replace(name, maskedName);&#xA;&#x9;&#x9;break;&#xA;&#x9;}&#xA;}&#xA;if(str_docuTitle != updatedDocument){&#xA;&#x9;// 출력&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;Console.WriteLine(&quot;[이름] Before : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{str_docuTitle}&quot;);&#xA;&#x9;Console.WriteLine();&#xA;&#x9;Console.WriteLine(&quot;[이름] After : &quot;);&#xA;&#x9;Console.WriteLine($&quot;{updatedDocument}&quot;);&#xA;&#x9;Console.WriteLine(&quot;---------------------------------------------------&quot;);&#xA;&#x9;&#xA;&#x9;str_docuTitle = updatedDocument;&#xA;&#x9;&#xA;}&#xA;&#xA;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="InvokeCode_11" Language="CSharp">
                                                            <ui:InvokeCode.Arguments>
                                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_names">
                                                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">i_dt_names</CSharpValue>
                                                              </InArgument>
                                                              <InOutArgument x:TypeArguments="x:String" x:Key="str_docuTitle">
                                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">str_docuTitle</CSharpReference>
                                                              </InOutArgument>
                                                            </ui:InvokeCode.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeCode>
                                                        </Sequence>
                                                        <If sap2010:Annotation.AnnotationText="비식별화엑셀 작성 및 수정" sap:VirtualizedContainerService.HintSize="510,567" sap2010:WorkflowViewState.IdRef="If_2">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">CurrentRow[str_titleColName].ToString() != str_docuTitle</CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If.Then>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="476,354" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteDifference" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="WriteDifference.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="i_str_beforeVal">
                                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">CurrentRow[str_titleColName].ToString()</CSharpValue>
                                                                  </InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="i_str_afterVal">
                                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">str_docuTitle</CSharpValue>
                                                                  </InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="i_str_docuNumber">
                                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">CurrentRow["문서번호"].ToString()</CSharpValue>
                                                                  </InArgument>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="i_config">
                                                                    <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">i_config</CSharpValue>
                                                                  </InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="i_str_lastMonth">
                                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">i_str_lastMonth</CSharpValue>
                                                                  </InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="i_str_exceptFilePath">
                                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">str_exceptCheckFilePath</CSharpValue>
                                                                  </InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <Assign sap2010:Annotation.AnnotationText="비식별화 한 값을 엑셀에 입력" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="ue:ExcelValue">
                                                                    <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">CurrentRow[str_titleColName]</CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="ue:ExcelValue">
                                                                    <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">str_docuTitle</CSharpValue>
                                                                  </InArgument>
                                                                </Assign.Value>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15" />
                                                          </If.Else>
                                                        </If>
                                                        <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create File" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="CreateFile_1">
                                                          <ui:CreateFile.Name>
                                                            <InArgument x:TypeArguments="x:String">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">$"{jobInfo.WorkflowName}_{CurrentRow["문서번호"].ToString()}.cpl"</CSharpValue>
                                                            </InArgument>
                                                          </ui:CreateFile.Name>
                                                          <ui:CreateFile.Path>
                                                            <InArgument x:TypeArguments="x:String">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">i_config["RPA_cpl"]</CSharpValue>
                                                            </InArgument>
                                                          </ui:CreateFile.Path>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:CreateFile>
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="WriteLine_13">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">$"[Create] {jobInfo.WorkflowName}_{CurrentRow["문서번호"].ToString()}.cpl"</CSharpValue>
                                                          </InArgument>
                                                        </WriteLine>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ueab:ExcelForEachRowX.Body>
                                                  <ueab:ExcelForEachRowX.Range>
                                                    <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                      <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">CurrentSheet</CSharpValue>
                                                    </InArgument>
                                                  </ueab:ExcelForEachRowX.Range>
                                                </ueab:ExcelForEachRowX>
                                              </Sequence>
                                            </ActivityAction>
                                          </ueab:ForEachSheetX.Body>
                                          <ueab:ForEachSheetX.Workbook>
                                            <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                              <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">
                                                <CSharpValue.Result>
                                                  <OutArgument x:TypeArguments="ue:IWorkbookQuickHandle" />
                                                </CSharpValue.Result>Excel</CSharpValue>
                                            </InArgument>
                                          </ueab:ForEachSheetX.Workbook>
                                        </ueab:ForEachSheetX>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelApplicationCard.Body>
                                  <ueab:ExcelApplicationCard.WorkbookPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">
                                        <CSharpValue.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </CSharpValue.Result>CurrentFile.ToString()</CSharpValue>
                                    </InArgument>
                                  </ueab:ExcelApplicationCard.WorkbookPath>
                                </ueab:ExcelApplicationCard>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelProcessScopeX.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ueab:ExcelProcessScopeX>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachFileX.Body>
                  <ui:ForEachFileX.Folder>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>i_config["RPA_Output"]</CSharpValue>
                    </InArgument>
                  </ui:ForEachFileX.Folder>
                </ui:ForEachFileX>
                <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="COM_Check_Or_Create_CplFile" sap:VirtualizedContainerService.HintSize="890,52" sap2010:WorkflowViewState.IdRef="InvokeProcess_2" ProcessName="COM_Check_Or_Create_CplFile">
                  <ui:InvokeProcess.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplPath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>i_config["RPA_cpl"]</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_cplFileName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>$"{jobInfo.WorkflowName}.cpl"</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="i_str_workFlowName">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>jobInfo.WorkflowName</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="i_bol_isCheck">False</InArgument>
                  </ui:InvokeProcess.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeProcess>
                <ui:LogMessage DisplayName="End Log Message" sap:VirtualizedContainerService.HintSize="890,52" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="ui:LogLevel" />
                        </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:Object" />
                        </CSharpValue.Result>$"End {jobInfo.WorkflowName}"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="922,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="300,531" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine sap2010:Annotation.AnnotationText="에러메세지" DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,83" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="x:String" />
                          </CSharpValue.Result>$"Error Msg : {exception.Message}"</CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <ui:LogMessage DisplayName="Error Msg" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="ui:LogLevel" />
                            </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:Object" />
                            </CSharpValue.Result>$"Error Msg : {exception.Message}"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="에러화면캡쳐&#xA;" DisplayName="TakeScreenshot" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="TakeScreenshot.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InOutArgument x:TypeArguments="x:String" x:Key="io_str_filePath" />
                        <InArgument x:TypeArguments="x:String" x:Key="i_str_folderPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>i_config["RPA_ScreenShot"]</CSharpValue>
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <If sap2010:Annotation.AnnotationText="Then = 재수행&#xA;Else = Rethrow" sap:VirtualizedContainerService.HintSize="258,94" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:Boolean" />
                            </CSharpValue.Result>int_retryCnt &lt; Convert.ToInt32(i_config["SeqMaxRetryCnt"].ToString())</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">
                                  <CSharpReference.Result>
                                    <OutArgument x:TypeArguments="Location(x:Boolean)" />
                                  </CSharpReference.Result>bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,416" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="bol_isFail = true" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">
                                  <CSharpReference.Result>
                                    <OutArgument x:TypeArguments="Location(x:Boolean)" />
                                  </CSharpReference.Result>bol_isFail</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="ui:LogLevel" />
                                  </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:Object" />
                                  </CSharpValue.Result>$"Start [{jobInfo.WorkflowName}] MaxRetry[{int_retryCnt}] Get to"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                          <Rethrow sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="922,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="x:Object" />
                          </CSharpValue.Result>exception.Message</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">
          <CSharpValue.Result>
            <OutArgument x:TypeArguments="x:Boolean" />
          </CSharpValue.Result>bol_isFail</CSharpValue>
      </ui:InterruptibleDoWhile.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>